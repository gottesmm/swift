// RUN: %target-sil-opt -enable-sil-ownership -enable-sil-verify-all=0 -module-name Swift -o /dev/null %s 2>&1
// REQUIRES: asserts

// Make sure that we properly handle unreachable code the likes of which come
// from SILGen. This file should never crash.

sil_stage raw

import Builtin

//////////////////
// Declarations //
//////////////////

enum Never {}

sil @no_return_function : $@convention(thin) () -> Never

///////////
// Tests //
///////////

sil @test1 : $@convention(thin) () -> () {
bb0:
  cond_br undef, bb1, bb12

bb1:
  %0 = alloc_box ${ var Builtin.Int32 }
  cond_br undef, bb3, bb2

bb2:
  dealloc_box %0 : ${ var Builtin.Int32 }
  br bb10

bb3:
  cond_br undef, bb4, bb5

bb4:
  br bb9

bb5:
  br bb6

bb6:
  cond_br undef, bb7, bb8

bb7:
  br bb6

bb8:
  br bb9

bb9:
  destroy_value %0 : ${ var Builtin.Int32 }
  br bb13

bb10:
  %1 = function_ref @no_return_function : $@convention(thin) () -> Never
  apply %1() : $@convention(thin) () -> Never
  br bb11

bb11:
  unreachable

bb12:
  br bb13

bb13:
  %9999 = tuple()
  return %9999 : $()
}
